version: "3"
services:
  postgres:
    container_name: postgres
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_USER=${PG_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data
  nginx:
    container_name: nginx
    depends_on:
      - api
      - app
    restart: always
    build:
      dockerfile: ${DOCKER_FILE_TYPE}
      context: ./nginx
    ports:
      - "3050:80"
  api:
    container_name: api
    build:
      dockerfile: ${DOCKER_FILE_TYPE}
      context: ./api
    volumes:
      - /app/node_modules
      - ./api:/app
    environment:
      - PG_USER=${PG_USER}
      - PG_HOST=${PG_HOST}
      - PG_DATABASE=${PG_DATABASE}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_PORT=${PG_PORT}
      - NM_HOST=${NM_HOST}
      - NM_PORT=${NM_PORT}
      - NM_MAIL=${NM_MAIL}
      - NM_PASSWORD=${NM_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ADMIN_FIRST_NAME=${ADMIN_FIRST_NAME}
      - ADMIN_LAST_NAME=${ADMIN_LAST_NAME}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - CORS_ORIGIN=${CORS_ORIGIN}
  app:
    container_name: app
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - RECAPTCHA_V2=${RECAPTCHA_V2}
      - RECAPTCHA_V3=${RECAPTCHA_V3}
    build:
      dockerfile: ${DOCKER_FILE_TYPE}
      context: ./app
    volumes:
      - /app/node_modules
      - ./app:/app
volumes:
  postgres-data: